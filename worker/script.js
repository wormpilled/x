!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n){function t(e){const n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"};return e.replace(/[&<>"'/]/gi,e=>n[e])}addEventListener("fetch",e=>{e.respondWith(async function(e){let n;n="POST"===e.method?await async function(e){const n=await e.formData(),t={};for(const e of n.entries())t[e[0]]=e[1];if(t.subject)return Response("",{status:400});const o=`${t.permalink.replace("/","")}-${Date.now()}`;return await COMMENTS_KV.put(o,JSON.stringify({user_ip:e.headers.get("cf-connecting-ip"),user_agent:e.headers.get("User-Agent"),referrer:e.headers.get("Referer"),permalink:t.permalink,name:t.name,email:t.email,content:t.content,time:Date.now()})),fetch(ZAPIER_URL,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({key:o,name:t.name,email:t.email,permalink:t.permalink,content:t.content})}),new Response(`\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <meta name="robots" content="noindex, noarchive, nosnippet">\n  </head>\n  <body>\n    Thank you so much for commenting! Your comment could take up to 5 minutes to appear.\n    <br>\n    <a href="${t.permalink}">⬅️ Go back</a>\n  </body>\n</html>\n    `,{headers:{"content-type":"text/html"}})}(e):await async function(e){const{pathname:n}=new URL(e.url);let o=n.replace("/comments/","");if(!o)return new Response("",{status:400});let r="",a=1;for(i=0;i<5;i++){const e=await COMMENTS_KV.list({prefix:o,limit:1e3,cursor:void 0});for(const n of e.keys){console.log("Found comment: "+n.name);const e=await COMMENTS_KV.get(n.name);comment=JSON.parse(e),console.log(comment),r+=`\n        <div class="item">\n          <h4><span class="grey">${a}.</span> ${t(comment.name)} <span class="grey small">${new Date(comment.time).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}</span></h4>\n          <p>${t(comment.content)}</p>\n        </div>\n      `,a+=1}if(void 0===e.cursor)break}1==a&&(r='\n      <div class="item">There aren\'t any comment yet.</div>\n    ');return new Response(r,{headers:{"content-type":"text/html","s-maxage":"300","Cache-Control":"public, max-age=300"}})}(e);return n}(e.request))})}]);